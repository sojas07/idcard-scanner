package com.miniproject.sdl;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.*;
import org.json.simple.JSONObject;
import org.json.simple.JSONValue;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.NotFoundException;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;

public class server {

    public static byte[] decodeImage(String imageDataString) {
        return Base64.getDecoder().decode(imageDataString);
    }
    @SuppressWarnings("deprecation")
	public static void createQR(String data, String path,
            String charset, Map hashMap,
            int height, int width)
            throws WriterException, IOException
    	{

		BitMatrix matrix = new MultiFormatWriter().encode(
		new String(data.getBytes(charset), charset),
		BarcodeFormat.QR_CODE, width, height);
		
		MatrixToImageWriter.writeToFile(
		matrix,
		path.substring(path.lastIndexOf('.') + 1),
		new File(path));
		}
    public static void main(String[] args){

        while (true){

            try{  
 
                socket connection (PORT 7777)
                ServerSocket welcomeSocket=new ServerSocket(7777);
                Socket connectionSocket=welcomeSocket.accept();
                BufferedReader inFromClient = new BufferedReader (new InputStreamReader(connectionSocket.getInputStream()));
                
                //convert received data
                System.out.println("File Received!");
                String message = org.apache.commons.io.IOUtils.toString(inFromClient);
                JSONObject obj1 = (JSONObject) JSONValue.parse(message);
                String name = obj1.get("filename").toString();
                String image = obj1.get("image").toString();      

                //convert from base64 to byte array
                byte[] imageByteArray = decodeImage(image);

                //convert byte array to a file image
                FileOutputStream imageOutFile = new FileOutputStream(name);
                imageOutFile.write(imageByteArray);
                imageOutFile.close();
                System.out.println("Image Successfully Manipulated!");
            } 
            catch (FileNotFoundException e) {
            } 
            catch (IOException e) {
            } 
        }
//    	String data = "www.geeksforgeeks.org";
//    	 
//        // The path where the image will get saved
//        String path = "demo.png";
// 
//        // Encoding charset
//        String charset = "UTF-8";
// 
//        Map<EncodeHintType, ErrorCorrectionLevel> hashMap
//            = new HashMap<EncodeHintType,
//                          ErrorCorrectionLevel>();
// 
//        hashMap.put(EncodeHintType.ERROR_CORRECTION,
//                    ErrorCorrectionLevel.L);
// 
//        // Create the QR code and save
//        // in the specified folder
//        // as a jpg file
//        createQR(data, path, charset, hashMap, 200, 200);
//        System.out.println("QR Code Generated!!! ");
    }
}